<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
    <mapper namespace="com.itwillbs.tradeup.mapper.MyPageMapper">
    	<select id="selectMember" resultType="map">
    		<![CDATA[ 
			SELECT m.*
			     , d.address_name 
			     , d.postcode 
			     , d.address1 
			     , d.address2 
			     , c.account_bank 
			     , c.account_num 
			  FROM MEMBER m
		 LEFT JOIN MY_ADDRESS d 
		 						ON m.member_id = d.member_id 
	 						   AND d.address_main = TRUE
		 LEFT JOIN MY_ACCOUNT c 
	 							ON m.member_id = c.member_id
 						 	   AND c.account_main = TRUE
			 WHERE 1=1 
			   AND m.member_id = #{sId}
			   AND (
		   			 d.address_main = TRUE
		   			 OR d.address_main IS NULL)
			   AND (
		   			 c.account_main = TRUE 
		   			 OR c.account_main IS NULL);
			]]>
    	</select>
    	
    	<select id="selectMyAccount" resultType="map">
    		SELECT *
    		  FROM MY_ACCOUNT
    		 WHERE member_id = #{sId}
   		  ORDER BY account_main DESC;
    	</select>
    	
    	<select id="selectMemberInfo" resultType="map">
    		SELECT *
    		  FROM ${table_name}
    		 WHERE member_id = #{sId}
   		  ORDER BY ${order_by} DESC;
    	</select>
    	
    	<update id="updateDeletMember">
    		UPDATE MEMBER 
			   SET member_state = '탈퇴' 
				 , exid_date = now()
				 , exid_feedback_idx = #{exid_feedback}
			<if test="exid_etc_feedback!=null and !exid_etc_feedback.equals('')">
				 , exid_etc_feedback = #{exid_etc_feedback}
			</if>
			 WHERE member_id = #{sId};
    	</update>
    	
    	<select id="selectMyProduct" resultType="map">
    		SELECT p.product_num
				 , c.category_name
				 , p.product_main_img 
				 , p.product_name
				 , p.member_id 
				 , p.product_price 
			 	 , p.sales_status 
				 , p.trading_method 
				 , p.product_release
			  FROM PRODUCT p
			  JOIN CATEGORY c 
			    ON p.category_idx = c.category_idx
			 WHERE p.member_id = #{sId}
		  ORDER BY product_release DESC;
    	</select>
    	
    	<select id="selectTotalWithdraw">
    		SELECT SUM(product_price) AS total_product_price
			  FROM WITHDRAW
		     WHERE 1=1
			   AND member_id = #{sId}
			   AND MONTH(withdraw_date) = MONTH(CURRENT_DATE())
			   AND YEAR(withdraw_date) = YEAR(CURRENT_DATE());
    	</select>
    	
    	<select id="selectMyPurchase" resultType="map">
    		SELECT p.product_num 
				 , p.product_main_img 
				 , p.product_name 
				 , p.product_price 
				 , p.member_id 
				 , p.trading_method 
				 , p.sales_status 
				 , w.*
			  FROM WITHDRAW w
			  JOIN PRODUCT p ON w.product_num = p.product_num 
			 WHERE w.member_id = #{sId}
		  ORDER BY withdraw_date DESC;
    	</select>
    	
    	<select id="selectMyFavorite">
    		SELECT p.product_num
				 , p.product_main_img 
				 , p.product_name 
				 , p.member_id
				 , p.product_price 
				 , p.sales_status 
				 , p.trading_method
				 , f.favorite_idx 
			  FROM FAVORITE f 
			  JOIN PRODUCT p ON f.product_num = p.product_num 
			 WHERE f.member_id = #{sId}
		  ORDER BY favorite_idx DESC;
    	</select>
    	
    	<delete id="deleteFavorite">
    		DELETE 
			  FROM FAVORITE 
			 WHERE 1=1 
			   AND member_id = #{sId}
			   AND favorite_idx = #{favorit_idx};
    	</delete>
    	
    	<select id="selecFintechInfo" resultType="map">
    		SELECT *
    		  FROM FINTECH_USER_INFO
    		 WHERE member_id = #{sId};
    	</select>
		
		<select id="selectFeedback" resultType="map">
			SELECT *
    		  FROM EXITED_FEEDBACK;
		</select>
		
		<select id="selectDepositCount">
			SELECT COUNT(deposit_idx) as count
            FROM DEPOSIT
            WHERE member_id = #{sId}
		</select>
		
    	<update id="updateMember">
    		UPDATE MEMBER
			   SET ${modify_type} = #{modify_value}
			 WHERE member_id = #{sId};
    	</update>
    	    	
    	<update id="updateMainInfo">
    		UPDATE ${tb} 
			   SET ${col2} = CASE 
                        			WHEN ${col} = (SELECT *
												     FROM (SELECT ${col}
														  	 FROM ${tb} 
															WHERE 1=1 
																		AND ${col2} = TRUE 
																		AND member_id = #{sId})a)
	                        																		THEN FALSE  
	                    			WHEN ${col} = #{value} THEN TRUE 
	  						   END
		     WHERE member_id = #{sId};
    	</update>
    	
    	<delete id="deleteInfo">
    		DELETE
    		  FROM ${tb} 
			 WHERE 1=1
			   AND ${col} = #{value}
			   AND member_id = #{sId};
    	</delete>
    	
    	<delete id="delectProcut">
    		DELETE
    		  FROM  PRODUCT
 			 WHERE 1=1
						AND member_id = #{sId}
						AND product_num = #{product_num};
    	</delete>
    	
    	<insert id="insertMyAddress">
			INSERT INTO MY_ADDRESS VALUES (
				NULL
				, #{sId}
				, #{recipient_name}
				, #{recipient_phone_num}
				, #{address1}
				, #{address2}
				, #{address_name}
				, FALSE
				, #{postcode}
			);    	
    	</insert>
    	
    	<insert id="insertMyAccount">
			INSERT INTO MY_ACCOUNT VALUES (
				NULL
				, #{sId}
				, #{account_num}
				, #{account_bank}
				, (SELECT * FROM (SELECT CASE WHEN COUNT(*) = 0 THEN TRUE ELSE FALSE END AS result
									FROM MY_ACCOUNT
									WHERE 1=1
												AND member_id = #{sId}
												AND account_main = TRUE)a)
				, #{account_holder_name}
			);
    	</insert>
    	
    	<update id="updateAddress">
			UPDATE MY_ADDRESS 
			SET 
				  recipient_name = #{recipient_name}
				, recipient_phone_num = #{phone_num}
				, address1 = #{address1}
				, address2 = #{address2}
				, address_name = #{address_name}
				, address_main = (SELECT * FROM (							 
												  SELECT address_main  
												  FROM MY_ADDRESS
												  WHERE member_id = #{sId} AND address_idx = #{address_idx}) a)
				, postcode = #{postcode}
			WHERE 1=1
			  AND address_idx = #{address_idx}
			  AND member_id = #{sId};    		
    	</update>
    	
    </mapper>