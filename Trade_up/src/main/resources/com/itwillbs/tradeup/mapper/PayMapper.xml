<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
    <mapper namespace="com.itwillbs.tradeup.mapper.PayMapper">
    	<select id="selectMyAddress" resultType="map"> <!-- 주소 목록 -->
    		SELECT *
    		FROM MY_ADDRESS
    		WHERE member_id = #{sId}
    	</select>
		
    	<select id="selectMyAddressMain" resultType="map"> <!-- 메인 주소 -->
    		SELECT  member_id
    		 -- , my_address_num
				, recipient_name
				, recipient_phone_num
				, address1
				, address2
				, address_name
			--	, address_main
				, postcode
    		FROM MY_ADDRESS
    		WHERE member_id = #{sId} AND address_main = 1
    	</select>
    	
    	<select id="selectProductPrice" resultType="String"> <!-- 상품 가격 가져오기 -->
    		SELECT product_price
    		FROM PRODUCT
    		WHERE product_num = #{product_num}
    	</select>
    	
    	<select id="selectProductName" resultType="String"> <!-- 상품 이름 가져오기 -->
    		SELECT product_name
    		FROM PRODUCT
    		WHERE product_num = #{product_num}
    	</select>
    	
    	<insert id="insertAddress"> <!-- 주소 추가 -->
    		INSERT 
    		INTO MY_ADDRESS (member_id, recipient_name, recipient_phone_num, address1, address2, address_main, postcode)
				VALUES (
		            #{member_id}
		            , #{member_name}
		            , #{member_phone}
		            , #{member_address1}
		            , #{member_address2}
		            , 0
		            , #{zonecode}
				)
    	</insert>

    	<update id="updateMainAddress"> <!-- 원래 메인 주소 그냥 주소로 변경 -->
    		UPDATE MY_ADDRESS
    		SET address_main = '0'
    		WHERE address_main = '1' AND member_id = #{member_id};
    	</update>
    	
    	<insert id="insertMainAddress"> <!-- 메인 주소 추가 -->
    		INSERT 
    		INTO MY_ADDRESS (member_id, recipient_name, recipient_phone_num, address1, address2, address_main, postcode)
				VALUES (
		            #{member_id}
		            , #{member_name}
		            , #{member_phone}
		            , #{member_address1}
		            , #{member_address2}
		            , 1
		            , #{zonecode}
				)
    	</insert>
    	
    	<select id="selectRemainPay" resultType="String"> <!-- 업페이 잔액 가져오기 -->
    		SELECT uppay_remain
    		FROM UPPAY
    		WHERE member_id = #{sId}
    		ORDER BY uppay_date DESC
			LIMIT 1
    	</select>
    	
    	<select id="selectOwnerBank" resultType="map"> <!-- 우리 계좌 정보 들고오기 -->
    		SELECT *
    		FROM OWNER_ACCOUNT
    		WHERE acc_bank = #{bank_name}
    	</select>
    	
    	<select id="selectMainAccount" resultType="map"> <!-- 구매자 메인 계좌 정보 가져오기 -->
    		SELECT  member_id 
				, account_num
				, account_bank
				, account_holder_name
    		FROM MY_ACCOUNT
    		WHERE member_id = #{sId} AND account_main = 1
    	</select>
    	
    	<insert id="insertDeposit"> <!-- 우리 계좌로 돈 입금(무통장 입금) -->
    		INSERT 
    		INTO WITHDRAW
    		(owner_bank, owner_acc, withdraw_bank, withdraw_acc, commission, product_price, member_id, member_name, method, buy_check, withdraw_date, product_num, merchant_uid)
				VALUES (
		            #{acc_bank}
		            , #{acc_num}
		            , #{account_bank}
		            , #{account_num}
		            , #{commission}
		            , #{product_price}
		            , #{member_id}
		            , #{member_name}
		            , #{method}
		            , '확정대기'
		            , now()
		            , #{product_num}
		            , #{merchant_uid}
				)
    	</insert>
    	
    	<select id="selectMyUppay" resultType="map"> <!-- 업페이 충전 내역 여부 확인 -->
			SELECT *
			FROM UPPAY
			WHERE member_id = #{sId}
		</select>
		
    	<select id="selectTokenInfo" resultType="map"> <!-- 토큰 정보 가져오기 -->
			SELECT *
			FROM FINTECH_USER_INFO
			WHERE member_id = #{sId}
		</select>
    	
    	<insert id="insertChargeAutoUppay"> <!-- 업페이 자동 충전 -->
    		INSERT 
    		INTO UPPAY
    		(member_id, uppay_pay, uppay_use, uppay_date, uppay_remain)
				VALUES (
		            #{member_id}
		            , #{chargeMoney}
		            , '자동 충전'
		            , now()
		            , #{total}
            )
    	</insert>
    	
    	<insert id="insertAutoUppay"> <!-- 업페이 자동 결제 -->
    		INSERT 
    		INTO UPPAY
    		(member_id, uppay_pay, uppay_use, uppay_date, uppay_remain)
				VALUES (
		            #{member_id}
		            , #{total}
		            , '결제'
		            , now()
		            , #{remainPay}
	            )
    	</insert>
    	
    	<update id="updateSalesStatus"> <!-- 상품 판매상태 거래중으로 바꾸기 -->
    		UPDATE PRODUCT
    		SET sales_status = '거래중'
    		WHERE product_num = #{product_num};
    	</update>
    </mapper>