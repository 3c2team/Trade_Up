<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.itwillbs.tradeup.mapper.ShopMapper">
	
	<!-- 대표계좌여부 -->
	<select id="selectAccount" resultType="int"> 
		SELECT COUNT(*)
		  FROM MY_ACCOUNT
		 WHERE member_id = #{sId} AND account_main = true
   	</select>
	
	<!-- 상품 등록 -->
   	<insert id="registProduct">
		INSERT INTO PRODUCT
		VALUES (null
				,#{member_id}
				,#{product_name}
				,#{product_price}
				,#{product_info}
				,now()
				,#{category_idx}
				,#{file_name}
				,#{trading_method}
				,#{product_status}
				<if test="trading_location == null">
<!-- 				<if test="!map.containsKey('trading_location')"> -->
				,(SELECT address1
			        FROM MY_ADDRESS
			       WHERE member_id = #{member_id})
				</if>
				<if test="trading_location != null">
<!-- 				</if> -->
		 		,#{trading_location}
				</if>
				,'판매중'
				,#{delivery_method}
			   )
	</insert>
	
	<!-- 상품 이미지 등록 -->
   	<insert id="registProductImg">
		INSERT INTO PRODUCT_IMG
		VALUES (null
				,(SELECT Max(product_num) as product_num
				    FROM PRODUCT)
				,#{product_image}
			   )
	</insert>
	
	<!-- 상품 상세조회 -->
	<select id="getProduct" resultType="map">
		SELECT 
			CASE
			    WHEN TIMESTAMPDIFF(SECOND, product_release, NOW()) &lt; 60 THEN '방금 전'
			    WHEN TIMESTAMPDIFF(MINUTE, product_release, NOW()) &lt; 60 THEN CONCAT(TIMESTAMPDIFF(MINUTE, product_release, NOW()), '분 전')
			    WHEN TIMESTAMPDIFF(HOUR, product_release, NOW()) &lt; 24 THEN CONCAT(TIMESTAMPDIFF(HOUR, product_release, NOW()), '시간 전')
			    WHEN TIMESTAMPDIFF(DAY, product_release, NOW()) = 1 THEN '어제'
			    WHEN TIMESTAMPDIFF(DAY, product_release, NOW()) &lt; 7 THEN CONCAT(TIMESTAMPDIFF(DAY, product_release, NOW()), '일 전')
			    WHEN TIMESTAMPDIFF(MONTH, product_release, NOW()) = 1 THEN '한 달 전'
			    WHEN TIMESTAMPDIFF(MONTH, product_release, NOW()) &lt; 12 THEN CONCAT(TIMESTAMPDIFF(MONTH, product_release, NOW()), '달 전')
			    WHEN TIMESTAMPDIFF(YEAR, product_release, NOW()) = 1 THEN '1년 전'
			    ELSE CONCAT(TIMESTAMPDIFF(YEAR, product_release, NOW()), '년 전')
		  	 END AS productRelease, product_num, member_id, product_name, product_price, product_info, product_release, category_idx, product_main_img, trading_method, product_status, trading_location, sales_status, delivery_method
   		  FROM PRODUCT
   		 WHERE product_num = #{product_num}
	</select>
	
	<!-- 상품 상세조회 이미지 -->
	<select id="getProductImg" resultType="map">
		SELECT *
   		  FROM PRODUCT_IMG
   		 WHERE product_num = #{product_num}
	</select>
	
	<!-- 카테고리 조회 -->
	<select id="getCategory" resultType="map">
		SELECT C.category_name
		  FROM CATEGORY C
		  JOIN PRODUCT P ON P.category_idx = C.category_idx
		 WHERE P.product_num = #{product_num}
	</select>
	
	<!-- 판매자 상품 조회 -->
	<select id="getSellerProduct" resultType="map">
		SELECT 
			CASE
			    WHEN TIMESTAMPDIFF(SECOND, product_release, NOW()) &lt; 60 THEN '방금 전'
			    WHEN TIMESTAMPDIFF(MINUTE, product_release, NOW()) &lt; 60 THEN CONCAT(TIMESTAMPDIFF(MINUTE, product_release, NOW()), '분 전')
			    WHEN TIMESTAMPDIFF(HOUR, product_release, NOW()) &lt; 24 THEN CONCAT(TIMESTAMPDIFF(HOUR, product_release, NOW()), '시간 전')
			    WHEN TIMESTAMPDIFF(DAY, product_release, NOW()) = 1 THEN '어제'
			    WHEN TIMESTAMPDIFF(DAY, product_release, NOW()) &lt; 7 THEN CONCAT(TIMESTAMPDIFF(DAY, product_release, NOW()), '일 전')
			    WHEN TIMESTAMPDIFF(MONTH, product_release, NOW()) = 1 THEN '한 달 전'
			    WHEN TIMESTAMPDIFF(MONTH, product_release, NOW()) &lt; 12 THEN CONCAT(TIMESTAMPDIFF(MONTH, product_release, NOW()), '달 전')
			    WHEN TIMESTAMPDIFF(YEAR, product_release, NOW()) = 1 THEN '1년 전'
			    ELSE CONCAT(TIMESTAMPDIFF(YEAR, product_release, NOW()), '년 전')
		  	 END AS productRelease, product_num, member_id, product_name, product_price, product_info, product_release, category_idx, product_main_img, trading_method, product_status, trading_location, sales_status, delivery_method
		  FROM PRODUCT
		 WHERE member_id = #{member_id} AND sales_status = '판매중'
	</select>
	
	<!-- 판매자 상품 개수 -->
	<select id="getSellerCount">
		SELECT Count(member_id)
		  FROM PRODUCT
		 WHERE sales_status = '판매중' AND member_id = (SELECT member_id
		 		  			  							  FROM PRODUCT
							 							 WHERE product_num = #{product_num}) 
	</select>
	
	<!-- 최신 상품 조회 -->
	<select id="selectProductList" resultType="map">
		SELECT 
			CASE
			    WHEN TIMESTAMPDIFF(SECOND, product_release, NOW()) &lt; 60 THEN '방금 전'
			    WHEN TIMESTAMPDIFF(MINUTE, product_release, NOW()) &lt; 60 THEN CONCAT(TIMESTAMPDIFF(MINUTE, product_release, NOW()), '분 전')
			    WHEN TIMESTAMPDIFF(HOUR, product_release, NOW()) &lt; 24 THEN CONCAT(TIMESTAMPDIFF(HOUR, product_release, NOW()), '시간 전')
			    WHEN TIMESTAMPDIFF(DAY, product_release, NOW()) = 1 THEN '어제'
			    WHEN TIMESTAMPDIFF(DAY, product_release, NOW()) &lt; 7 THEN CONCAT(TIMESTAMPDIFF(DAY, product_release, NOW()), '일 전')
			    WHEN TIMESTAMPDIFF(MONTH, product_release, NOW()) = 1 THEN '한 달 전'
			    WHEN TIMESTAMPDIFF(MONTH, product_release, NOW()) &lt; 12 THEN CONCAT(TIMESTAMPDIFF(MONTH, product_release, NOW()), '달 전')
			    WHEN TIMESTAMPDIFF(YEAR, product_release, NOW()) = 1 THEN '1년 전'
			    ELSE CONCAT(TIMESTAMPDIFF(YEAR, product_release, NOW()), '년 전')
		  	 END AS productRelease, product_num, category_idx, product_name, product_main_img, product_price, trading_location
		  FROM PRODUCT
		 WHERE sales_status = '판매중'
	  ORDER BY product_release DESC
	</select>
	
	<!-- 찜 갯수 -->
	<select id="selectJJim">
		SELECT COUNT(F.favorite_idx) as C
		  FROM PRODUCT P
		  JOIN FAVORITE F ON P.product_num = F.product_num
		 WHERE P.product_num = #{product_num} AND sales_status = '판매중'
	  GROUP BY P.product_num
	  ORDER BY C desc
	</select>
	
	<!-- 판매자 판매 개수 -->
	<select id="selectSellCount">
		SELECT COUNT(sales_status)
		  FROM PRODUCT
 		 WHERE (SELECT count(sales_status)
		  		  FROM PRODUCT
		 		 WHERE member_id = #{member_id}) = '거래완료'
	</select>
	
	<!-- 카테고리별 조회 -->
	<select id="fillterProductList">
		SELECT 
			CASE
			    WHEN TIMESTAMPDIFF(SECOND, product_release, NOW()) &lt; 60 THEN '방금 전'
			    WHEN TIMESTAMPDIFF(MINUTE, product_release, NOW()) &lt; 60 THEN CONCAT(TIMESTAMPDIFF(MINUTE, product_release, NOW()), '분 전')
			    WHEN TIMESTAMPDIFF(HOUR, product_release, NOW()) &lt; 24 THEN CONCAT(TIMESTAMPDIFF(HOUR, product_release, NOW()), '시간 전')
			    WHEN TIMESTAMPDIFF(DAY, product_release, NOW()) = 1 THEN '어제'
			    WHEN TIMESTAMPDIFF(DAY, product_release, NOW()) &lt; 7 THEN CONCAT(TIMESTAMPDIFF(DAY, product_release, NOW()), '일 전')
			    WHEN TIMESTAMPDIFF(MONTH, product_release, NOW()) = 1 THEN '한 달 전'
			    WHEN TIMESTAMPDIFF(MONTH, product_release, NOW()) &lt; 12 THEN CONCAT(TIMESTAMPDIFF(MONTH, product_release, NOW()), '달 전')
			    WHEN TIMESTAMPDIFF(YEAR, product_release, NOW()) = 1 THEN '1년 전'
			    ELSE CONCAT(TIMESTAMPDIFF(YEAR, product_release, NOW()), '년 전')
		  	 END AS productRelease, product_num, category_idx, product_name, product_main_img, product_price, trading_location
		  FROM PRODUCT
		 WHERE sales_status = '판매중' AND category_idx = (SELECT category_idx
															 FROM CATEGORY
															WHERE category_name = #{category_name})
	  ORDER BY product_release DESC
	</select>
	
	<select id="searchProductList">
		SELECT 
			CASE
			    WHEN TIMESTAMPDIFF(SECOND, product_release, NOW()) &lt; 60 THEN '방금 전'
			    WHEN TIMESTAMPDIFF(MINUTE, product_release, NOW()) &lt; 60 THEN CONCAT(TIMESTAMPDIFF(MINUTE, product_release, NOW()), '분 전')
			    WHEN TIMESTAMPDIFF(HOUR, product_release, NOW()) &lt; 24 THEN CONCAT(TIMESTAMPDIFF(HOUR, product_release, NOW()), '시간 전')
			    WHEN TIMESTAMPDIFF(DAY, product_release, NOW()) = 1 THEN '어제'
			    WHEN TIMESTAMPDIFF(DAY, product_release, NOW()) &lt; 7 THEN CONCAT(TIMESTAMPDIFF(DAY, product_release, NOW()), '일 전')
			    WHEN TIMESTAMPDIFF(MONTH, product_release, NOW()) = 1 THEN '한 달 전'
			    WHEN TIMESTAMPDIFF(MONTH, product_release, NOW()) &lt; 12 THEN CONCAT(TIMESTAMPDIFF(MONTH, product_release, NOW()), '달 전')
			    WHEN TIMESTAMPDIFF(YEAR, product_release, NOW()) = 1 THEN '1년 전'
			    ELSE CONCAT(TIMESTAMPDIFF(YEAR, product_release, NOW()), '년 전')
		  	 END AS productRelease, product_num, category_idx, product_name, product_main_img, product_price, trading_location
		  FROM PRODUCT
		 WHERE sales_status = '판매중' AND product_name LIKE('%${search}%') 
	  ORDER BY product_release DESC
	</select>

	<!-- 최신 목록 -->
	<select id="lastProductList">
		SELECT 
			CASE
			    WHEN TIMESTAMPDIFF(SECOND, product_release, NOW()) &lt; 60 THEN '방금 전'
			    WHEN TIMESTAMPDIFF(MINUTE, product_release, NOW()) &lt; 60 THEN CONCAT(TIMESTAMPDIFF(MINUTE, product_release, NOW()), '분 전')
			    WHEN TIMESTAMPDIFF(HOUR, product_release, NOW()) &lt; 24 THEN CONCAT(TIMESTAMPDIFF(HOUR, product_release, NOW()), '시간 전')
			    WHEN TIMESTAMPDIFF(DAY, product_release, NOW()) = 1 THEN '어제'
			    WHEN TIMESTAMPDIFF(DAY, product_release, NOW()) &lt; 7 THEN CONCAT(TIMESTAMPDIFF(DAY, product_release, NOW()), '일 전')
			    WHEN TIMESTAMPDIFF(MONTH, product_release, NOW()) = 1 THEN '한 달 전'
			    WHEN TIMESTAMPDIFF(MONTH, product_release, NOW()) &lt; 12 THEN CONCAT(TIMESTAMPDIFF(MONTH, product_release, NOW()), '달 전')
			    WHEN TIMESTAMPDIFF(YEAR, product_release, NOW()) = 1 THEN '1년 전'
			    ELSE CONCAT(TIMESTAMPDIFF(YEAR, product_release, NOW()), '년 전')
		  	 END AS productRelease, product_num, category_idx, product_name, product_main_img, product_price, trading_location
		  FROM PRODUCT 
		 WHERE sales_status = '판매중' AND category_idx = (SELECT category_idx
															 FROM CATEGORY
															WHERE category_name = #{category_name})
	  ORDER BY product_release desc
	</select>
	
	<!-- 찜 목록 -->
	<select id="jjimProductList">
		SELECT 
		  CASE
		    WHEN TIMESTAMPDIFF(SECOND, product_release, NOW()) &lt; 60 THEN '방금 전'
		    WHEN TIMESTAMPDIFF(MINUTE, product_release, NOW()) &lt; 60 THEN CONCAT(TIMESTAMPDIFF(MINUTE, product_release, NOW()), '분 전')
		    WHEN TIMESTAMPDIFF(HOUR, product_release, NOW()) &lt; 24 THEN CONCAT(TIMESTAMPDIFF(HOUR, product_release, NOW()), '시간 전')
		    WHEN TIMESTAMPDIFF(DAY, product_release, NOW()) = 1 THEN '어제'
		    WHEN TIMESTAMPDIFF(DAY, product_release, NOW()) &lt; 7 THEN CONCAT(TIMESTAMPDIFF(DAY, product_release, NOW()), '일 전')
		    WHEN TIMESTAMPDIFF(MONTH, product_release, NOW()) = 1 THEN '한 달 전'
		    WHEN TIMESTAMPDIFF(MONTH, product_release, NOW()) &lt; 12 THEN CONCAT(TIMESTAMPDIFF(MONTH, product_release, NOW()), '달 전')
		    WHEN TIMESTAMPDIFF(YEAR, product_release, NOW()) = 1 THEN '1년 전'
		    ELSE CONCAT(TIMESTAMPDIFF(YEAR, product_release, NOW()), '년 전')
		  END AS productRelease, P.product_num, category_idx, product_name, product_main_img, product_price, trading_location, COALESCE(COUNT(F.favorite_idx), 0) AS C
		  FROM PRODUCT P
	 LEFT JOIN FAVORITE F ON P.product_num = F.product_num
		 WHERE sales_status = '판매중' AND category_idx = (SELECT category_idx
															 FROM CATEGORY
															WHERE category_name = #{category_name})
	  GROUP BY P.product_num
	  ORDER BY C desc
	</select>
	
	<!-- 높은 가격 목록 -->
	<select id="highProductList">
	  SELECT replace(replace(product_price, "원", "") , ",", "") as p,
		  CASE
		    WHEN TIMESTAMPDIFF(SECOND, product_release, NOW()) &lt; 60 THEN '방금 전'
		    WHEN TIMESTAMPDIFF(MINUTE, product_release, NOW()) &lt; 60 THEN CONCAT(TIMESTAMPDIFF(MINUTE, product_release, NOW()), '분 전')
		    WHEN TIMESTAMPDIFF(HOUR, product_release, NOW()) &lt; 24 THEN CONCAT(TIMESTAMPDIFF(HOUR, product_release, NOW()), '시간 전')
		    WHEN TIMESTAMPDIFF(DAY, product_release, NOW()) = 1 THEN '어제'
		    WHEN TIMESTAMPDIFF(DAY, product_release, NOW()) &lt; 7 THEN CONCAT(TIMESTAMPDIFF(DAY, product_release, NOW()), '일 전')
		    WHEN TIMESTAMPDIFF(MONTH, product_release, NOW()) = 1 THEN '한 달 전'
		    WHEN TIMESTAMPDIFF(MONTH, product_release, NOW()) &lt; 12 THEN CONCAT(TIMESTAMPDIFF(MONTH, product_release, NOW()), '달 전')
		    WHEN TIMESTAMPDIFF(YEAR, product_release, NOW()) = 1 THEN '1년 전'
		    ELSE CONCAT(TIMESTAMPDIFF(YEAR, product_release, NOW()), '년 전')
		  END AS productRelease, product_num, category_idx, product_name, product_main_img, product_price, trading_location
		FROM PRODUCT
	   WHERE sales_status = '판매중' AND category_idx = (SELECT category_idx
														   FROM CATEGORY
														  WHERE category_name = #{category_name}) 
	ORDER BY cast(p as unsigned) desc
	</select>
	
	<!-- 낮은 가격 목록 -->
	<select id="lowProductList">
	   SELECT replace(replace(product_price, "원", "") , ",", "") as p,
		  CASE
		    WHEN TIMESTAMPDIFF(SECOND, product_release, NOW()) &lt; 60 THEN '방금 전'
		    WHEN TIMESTAMPDIFF(MINUTE, product_release, NOW()) &lt; 60 THEN CONCAT(TIMESTAMPDIFF(MINUTE, product_release, NOW()), '분 전')
		    WHEN TIMESTAMPDIFF(HOUR, product_release, NOW()) &lt; 24 THEN CONCAT(TIMESTAMPDIFF(HOUR, product_release, NOW()), '시간 전')
		    WHEN TIMESTAMPDIFF(DAY, product_release, NOW()) = 1 THEN '어제'
		    WHEN TIMESTAMPDIFF(DAY, product_release, NOW()) &lt; 7 THEN CONCAT(TIMESTAMPDIFF(DAY, product_release, NOW()), '일 전')
		    WHEN TIMESTAMPDIFF(MONTH, product_release, NOW()) = 1 THEN '한 달 전'
		    WHEN TIMESTAMPDIFF(MONTH, product_release, NOW()) &lt; 12 THEN CONCAT(TIMESTAMPDIFF(MONTH, product_release, NOW()), '달 전')
		    WHEN TIMESTAMPDIFF(YEAR, product_release, NOW()) = 1 THEN '1년 전'
		    ELSE CONCAT(TIMESTAMPDIFF(YEAR, product_release, NOW()), '년 전')
		  END AS productRelease, product_num, category_idx, product_name, product_main_img, product_price, trading_location
		FROM PRODUCT
	   WHERE sales_status = '판매중' AND category_idx = (SELECT category_idx
														   FROM CATEGORY
														  WHERE category_name = #{category_name}) 
	ORDER BY cast(p as unsigned) asc
	</select>
	
	<!-- 판매중 목록 -->
	<select id="selectAllCount">
	  SELECT count(product_num)
		FROM PRODUCT
	   WHERE sales_status = '판매중'
	</select>

	<!-- 상품 수정 -->
	<update id="updateProduct">
		UPDATE PRODUCT
		   SET product_name = #{product_name}
			   , product_price = #{product_price}
			   , product_info = #{product_info}
			   , product_release = #{product_release}
			   , product_main_img = #{file_name}
			   , trading_method = #{trading_method}
			   , product_status = #{product_status}
			   , trading_location = #{trading_location}
			   , sales_status = #{sales_status}
			   , delivery_method = #{delivery_method}
		 WHERE product_num = #{product_num}
	</update>
	
   	<!-- 상품 이미지 삭제 -->
	<delete id="delectProductImg">
   		DELETE
   		  FROM PRODUCT_IMG
		 WHERE product_num = #{product_num}
   	</delete>
   	
   	<!-- 상품 이미지 수정 -->
   	<insert id="updateProductImg">
		INSERT INTO PRODUCT_IMG
		VALUES (null
				, #{product_num}
				, #{product_image}
			   )
	</insert>
	
</mapper>